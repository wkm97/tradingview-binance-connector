AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Parameters:
    BinanceApiKey:
      Description: 'Required. Binance API Key you are deploying'
      Type: String
    BinanceApiSecret:
      Description: 'Required. Binance API Secret you are deploying'
      Type: String
    DiscordWebhook:
      Description: 'Required. DiscordWebhook for notification you are deploying'
      Type: String
      

Globals:
  Function:
    Handler: handler.handler
    Runtime: python3.9
    Environment:
      Variables:
        POWERTOOLS_SERVICE_NAME: midas
        LOG_LEVEL: INFO
        BINANCE_API_KEY: !Ref BinanceApiKey
        BINANCE_API_SECRET: !Ref BinanceApiSecret
        DISCORD_WEBHOOK: !Ref DiscordWebhook

Resources:
  ServerlessLibraryLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: .
      CompatibleRuntimes:
        - python3.9
    Metadata:
      BuildMethod: makefile
      
  ServerlessProjectLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: .
      CompatibleRuntimes:
        - python3.9
    Metadata:
      BuildMethod: makefile
  
  TradeSnsTopic:
    Type: AWS::SNS::Topic

  DiscordNotificationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions
      Handler: discord_notification.lambda_handler
      Timeout: 30
      Layers:
        - !Ref ServerlessProjectLayer
      Events:
        SNSEvent:
          Type: SNS
          Properties:
            Topic: !Ref TradeSnsTopic
  
  SpotTradeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions
      Handler: spot_trade.lambda_handler
      Timeout: 30
      Environment:
        Variables:
          TRADE_SNS_TOPIC: !Ref TradeSnsTopic
      Layers:
        - !Ref ServerlessProjectLayer
      Policies:
        - SNSPublishMessagePolicy:
            TopicName:
              !GetAtt TradeSnsTopic.TopicName

      Events:
        SpotAccount:
          Type: Api
          Properties:
            Path: /trade
            Method: post

Outputs:
  AddApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
